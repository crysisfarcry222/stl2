separate para number for <expr/range/utility> synopsis

20.2.2 is_nothrow_destructible is implied

Make function objects non-template classes? (No.)

Function objects: remove nested typedefs

Find old issue about naming of "identity". #700 (Talk to PJ.)

Tagged
======

20.15.1 /p1 Examples of tuple-like types

Ville suggests a separate paper for tagged. (Doesn't need to be an official document; can be published after the mailing deadline.)

/p2 Walter doesn't like "in order".

Ville: duplicate text between make_pair and make_tagged_pair

Walter: what about tagged and array? Open an issue.


Iterators
=========

IndirectlySwappable s/value types/reference types/

WeaklyIncrementable: s/moves i to the next element/advances i to denote the next (possibly past the last) element/ ???
"describes an ordered sequence of values"??
Open an issue!
"both/and" not "either/or"

24.2.10/2 s/effectively//. s/deducable/deduceable/

Sentinel
--
s/past-the-end/past-the-last/

WeakOutputIterator
--
"comparable for equality" -> "EqualityComparable"

ForwardIterator
-------
unstrike "to other value initialized iterators of the same type"
"describe" -> specify

RandomAccessIterator
--
p1, add op- to constant-time advance list.
"++a, bool(a == b)" -> "++a, then bool(a == b)".

Projected iterator
---------
iterator -> readable
Define projections or add a reference
section name should not be "indirectcallables"


meta: stable names are backwards. use parent.child



24.3.3 is the last covered subsection.

25 Sept is the mailing deadline!!
